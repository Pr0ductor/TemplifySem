@model List<Templify.Application.Common.DTOs.AuthorSubscriptionDto>
@{
    ViewData["Title"] = "Подписки на авторов";
    Layout = "_AdminLayout";
}

<div class="subscriptions-container">
    <!-- Заголовок -->
    <div class="page-header">
        <div class="header-content">
            <h1>Подписки на авторов</h1>
            <p>Управление всеми подписками пользователей на авторов</p>
        </div>
        <div class="header-actions">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Добавить подписку
            </a>
            <span class="subscription-count">@Model.Count подписок</span>
        </div>
    </div>

    <!-- Сообщения -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle"></i>
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Поиск -->
    <div class="search-filters">
        <div class="search-box">
            <i class="ri-search-line"></i>
            <input type="text" id="searchInput" placeholder="Поиск по пользователю или автору..." value="@ViewBag.SearchTerm">
        </div>
        <div class="filters">
            <button id="clearFilters" class="btn-secondary" style="padding: 8px 16px; font-size: 12px;">
                <i class="fas fa-times"></i> Сбросить
            </button>
        </div>
    </div>

    <!-- Таблица подписок -->
    <div class="table-container">
        <table class="admin-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Пользователь</th>
                    <th>Автор</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="4" class="text-center py-4">
                            <div class="empty-state">
                                <i class="ri-notification-line"></i>
                                <p>Подписки не найдены</p>
                            </div>
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var subscription in Model)
                    {
                        <tr>
                            <td>#@subscription.Id</td>
                            <td>
                                <div class="user-info">
                                    <div class="user-avatar">
                                        @if (!string.IsNullOrEmpty(subscription.UserAvatarUrl))
                                        {
                                            var userAvatarPath = subscription.UserAvatarUrl.StartsWith("http")
                                                ? subscription.UserAvatarUrl
                                                : subscription.UserAvatarUrl.Replace("~", "").Replace("~/", "/");
                                            <img src="@userAvatarPath" alt="User Avatar" class="user-avatar-img" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                        }
                                        <span class="user-avatar-initial" style="@(string.IsNullOrEmpty(subscription.UserAvatarUrl) ? "" : "display:none;")">
                                            @(subscription.UserName.Length > 0 ? subscription.UserName[0].ToString().ToUpper() : "U")
                                        </span>
                                    </div>
                                    <div>
                                        <div class="user-name">@subscription.UserName</div>
                                        <div class="user-email">@subscription.UserEmail</div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="author-info">
                                    <div class="author-avatar">
                                        @if (!string.IsNullOrEmpty(subscription.AuthorAvatarUrl))
                                        {
                                            var authorAvatarPath = subscription.AuthorAvatarUrl.StartsWith("http")
                                                ? subscription.AuthorAvatarUrl
                                                : subscription.AuthorAvatarUrl.Replace("~", "").Replace("~/", "/");
                                            <img src="@authorAvatarPath" alt="Author Avatar" class="author-avatar-img" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                        }
                                        <span class="author-avatar-initial" style="@(string.IsNullOrEmpty(subscription.AuthorAvatarUrl) ? "" : "display:none;")">
                                            @(subscription.AuthorName.Length > 0 ? subscription.AuthorName[0].ToString().ToUpper() : "A")
                                        </span>
                                    </div>
                                    <div>
                                        <div class="author-name">@subscription.AuthorName</div>
                                        <div class="author-email">@subscription.AuthorEmail</div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a asp-action="Edit" asp-route-id="@subscription.Id" class="btn-icon btn-edit" title="Изменить">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <form asp-action="Delete" asp-route-id="@subscription.Id" method="post" style="display:inline" onsubmit="return confirm('Вы уверены, что хотите удалить эту подписку?');">
                                        <button type="submit" class="btn-icon btn-delete" title="Удалить">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<style>
.subscriptions-container {
    padding: 24px;
    max-width: 1400px;
    margin: 0 auto;
}

.page-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 32px;
}

.header-content h1 {
    margin: 0 0 8px 0;
    color: #1a1a1a;
    font-size: 28px;
    font-weight: 700;
}

.header-content p {
    margin: 0;
    color: #666;
    font-size: 16px;
}

.header-actions {
    display: flex;
    align-items: center;
    gap: 16px;
}

.btn-primary {
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    font-size: 14px;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: all 0.2s ease;
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(240, 147, 251, 0.3);
    color: white;
    text-decoration: none;
}

.subscription-count {
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    color: white;
    padding: 8px 16px;
    border-radius: 20px;
    font-weight: 600;
    font-size: 14px;
}

.alert {
    padding: 16px;
    border-radius: 8px;
    margin-bottom: 24px;
    display: flex;
    align-items: center;
    gap: 12px;
    font-weight: 500;
}

.alert-success {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.alert-danger {
    background: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

.search-filters {
    display: flex;
    gap: 16px;
    margin-bottom: 24px;
    align-items: center;
    flex-wrap: wrap;
}

.search-box {
    position: relative;
    flex: 1;
    min-width: 300px;
}

.search-box i {
    position: absolute;
    left: 16px;
    top: 50%;
    transform: translateY(-50%);
    color: #666;
}

.search-box input {
    width: 100%;
    padding: 12px 16px 12px 48px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    font-size: 14px;
    background: white;
}

.search-box input:focus {
    outline: none;
    border-color: #f093fb;
    box-shadow: 0 0 0 3px rgba(240, 147, 251, 0.1);
}

.table-container {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    margin-bottom: 24px;
}

.admin-table {
    width: 100%;
    border-collapse: collapse;
}

.admin-table th,
.admin-table td {
    padding: 16px;
    text-align: left;
    border-bottom: 1px solid #f0f0f0;
}

.admin-table th {
    background: #f8f9fa;
    font-weight: 600;
    color: #1a1a1a;
    font-size: 14px;
}

.admin-table tbody tr:hover {
    background: #f8f9fa;
}

.user-info, .author-info {
    display: flex;
    align-items: center;
    gap: 12px;
}

.user-avatar, .author-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 16px;
    overflow: hidden;
    position: relative;
}

.user-avatar-img, .author-avatar-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
}

.user-avatar-initial, .author-avatar-initial {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 16px;
}

.user-name, .author-name {
    font-weight: 600;
    color: #1a1a1a;
    margin-bottom: 2px;
}

.user-email, .author-email {
    color: #666;
    font-size: 12px;
}

.action-buttons {
    display: flex;
    gap: 8px;
}

.btn-icon {
    width: 32px;
    height: 32px;
    border: none;
    border-radius: 6px;
    background: #f8f9fa;
    color: #666;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
}

.btn-icon:hover {
    background: #f093fb;
    color: white;
}

.empty-state {
    text-align: center;
    color: #666;
    padding: 40px 20px;
}

.empty-state i {
    font-size: 48px;
    margin-bottom: 16px;
    opacity: 0.5;
}

.empty-state p {
    margin: 0;
    font-size: 16px;
}

@@media (max-width: 768px) {
    .subscriptions-container {
        padding: 16px;
    }
    
    .page-header {
        flex-direction: column;
        gap: 16px;
        align-items: stretch;
    }
    
    .search-filters {
        flex-direction: column;
        align-items: stretch;
    }
    
    .search-box {
        min-width: auto;
    }
    
    .admin-table {
        font-size: 12px;
    }
    
    .admin-table th,
    .admin-table td {
        padding: 12px 8px;
    }
}
</style>

<script src="~/js/admin-filters.js"></script>
