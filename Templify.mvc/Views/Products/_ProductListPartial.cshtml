@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@model Templify.mvc.Models.ProductListViewModel

@if (Model.PurchasedProducts.Any())
{
    <h3 style="margin-bottom: 16px; margin-top: 24px; color: #fff; font-size: 1.5rem; font-weight: 700;">@Localizer["PurchasedTemplates"]</h3>
    <div class="trending__grid">
        @foreach (var product in Model.PurchasedProducts)
        {
            <a asp-controller="Products" asp-action="Product" asp-route-id="@product.Id" style="text-decoration: none; color: inherit;">
                <div class="product-card">
                    <div class="product-card__img">
                        <img src="@Url.Content(product.ImageUrl)" alt="@product.Description" />
                        <div class="product-card__price">$@product.Price</div>
                        <div class="product-card__purchased-badge">
                            <i class="ri-check-line"></i> @Localizer["Purchased"]
                        </div>
                    </div>
                    <div class="product-card__meta">
                        <span class="product-card__author">@product.Author</span>
                        <span class="product-card__name">@product.Name</span>
                    </div>
                </div>
            </a>
        }
    </div>
}

@if (Model.Products.Any())
{
    <h3 style="margin-bottom: 16px; margin-top: 32px; color: #fff; font-size: 1.5rem; font-weight: 700;">@Localizer["AllTemplates"]</h3>
    <div class="trending__grid">
        @foreach (var product in Model.Products)
        {
            <a asp-controller="Products" asp-action="Product" asp-route-id="@product.Id" style="text-decoration: none; color: inherit;">
                <div class="product-card">
                    <div class="product-card__img">
                        <img src="@Url.Content(product.ImageUrl)" alt="@product.Description" />
                        <div class="product-card__price">$@product.Price</div>
                    </div>
                    <div class="product-card__meta">
                        <span class="product-card__author">@product.Author</span>
                        <span class="product-card__name">@product.Name</span>
                    </div>
                </div>
            </a>
        }
    </div>
}

@if (!Model.Products.Any() && !Model.PurchasedProducts.Any())
{
    <div class="no-results">
        <div class="no-results__icon">
            <i class="ri-search-line"></i>
        </div>
        <h3 class="no-results__title">@Localizer["Notemplatesfound"]</h3>
        <p class="no-results__description">
            @Localizer["Wecouldntfind"]
            @Localizer["Tryadjusting"]
        </p>
        <div class="no-results__suggestions">
            <div class="suggestion-tag">
                <i class="ri-lightbulb-line"></i>
                <span>@Localizer["Trydifferentkeywords"]</span>
            </div>
            <div class="suggestion-tag">
                <i class="ri-filter-line"></i>
                <span>@Localizer["Checkspelling"]</span>
            </div>
            <div class="suggestion-tag">
                <i class="ri-eye-line"></i>
                <span>@Localizer["Browsealltemplates"]</span>
            </div>
        </div>
        <button class="no-results__button" onclick="clearSearch()">
            <i class="ri-refresh-line"></i>
            <span>@Localizer["Showalltemplates"]</span>
        </button>
    </div>
}

<style>
    .no-results {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 80px 20px;
        text-align: center;
        background: linear-gradient(135deg, #1a1d1e 0%, #23272a 100%);
        border-radius: 24px;
        border: 1px solid rgba(0, 255, 136, 0.1);
        box-shadow: 
            0 8px 32px rgba(0, 0, 0, 0.15),
            0 4px 16px rgba(0, 255, 136, 0.05);
        margin: 20px 0;
        min-height: 400px;
    }
    
    .no-results__icon {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #00ff88 0%, #00e0ff 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 24px;
        box-shadow: 0 8px 24px rgba(0, 255, 136, 0.2);
        animation: pulse 2s infinite;
    }
    
    .no-results__icon i {
        font-size: 2.5rem;
        color: #111;
    }
    
    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    .no-results__title {
        font-size: 2rem;
        font-weight: 700;
        color: #fff;
        margin-bottom: 16px;
        background: linear-gradient(135deg, #00ff88 0%, #00e0ff 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
    
    .no-results__description {
        color: rgba(255, 255, 255, 0.7);
        font-size: 1.1rem;
        line-height: 1.6;
        margin-bottom: 32px;
        max-width: 500px;
    }
    
    .no-results__suggestions {
        display: flex;
        gap: 16px;
        margin-bottom: 32px;
        flex-wrap: wrap;
        justify-content: center;
    }
    
    .suggestion-tag {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 20px;
        background: rgba(0, 255, 136, 0.1);
        border: 1px solid rgba(0, 255, 136, 0.2);
        border-radius: 50px;
        color: #00ff88;
        font-size: 0.95rem;
        font-weight: 500;
        transition: all 0.2s ease;
    }
    
    .suggestion-tag:hover {
        background: rgba(0, 255, 136, 0.15);
        border-color: rgba(0, 255, 136, 0.3);
        transform: translateY(-2px);
    }
    
    .suggestion-tag i {
        font-size: 1.1rem;
    }
    
    .no-results__button {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 16px 32px;
        background: linear-gradient(135deg, #00ff88 0%, #00e0ff 100%);
        border: none;
        border-radius: 50px;
        color: #111;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 16px rgba(0, 255, 136, 0.2);
    }
    
    .no-results__button:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 24px rgba(0, 255, 136, 0.3);
    }
    
    .no-results__button i {
        font-size: 1.2rem;
    }
    
    @@media (max-width: 768px) {
        .no-results {
            padding: 60px 16px;
            min-height: 350px;
        }
        
        .no-results__icon {
            width: 60px;
            height: 60px;
            margin-bottom: 20px;
        }
        
        .no-results__icon i {
            font-size: 2rem;
        }
        
        .no-results__title {
            font-size: 1.6rem;
            margin-bottom: 12px;
        }
        
        .no-results__description {
            font-size: 1rem;
            margin-bottom: 24px;
        }
        
        .no-results__suggestions {
            gap: 12px;
            margin-bottom: 24px;
        }
        
        .suggestion-tag {
            padding: 10px 16px;
            font-size: 0.9rem;
        }
        
        .no-results__button {
            padding: 14px 24px;
            font-size: 1rem;
        }
    }
    
    @@media (max-width: 480px) {
        .no-results {
            padding: 40px 12px;
            min-height: 300px;
        }
        
        .no-results__suggestions {
            flex-direction: column;
            align-items: center;
        }
        
        .suggestion-tag {
            width: 100%;
            max-width: 280px;
            justify-content: center;
        }
    }
</style>

<script>
    function clearSearch() {
        const searchInput = document.getElementById('product-search');
        if (searchInput) {
            searchInput.value = '';
            searchInput.focus();
            // Триггерим событие input для обновления результатов
            const event = new Event('input', { bubbles: true });
            searchInput.dispatchEvent(event);
        }
    }
</script>

