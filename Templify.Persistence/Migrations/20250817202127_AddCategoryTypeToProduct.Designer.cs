// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Templify.Persistence.Contexts;

#nullable disable

namespace Templify.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250817202127_AddCategoryTypeToProduct")]
    partial class AddCategoryTypeToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Templify.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId")
                        .IsUnique();

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Templify.Domain.Entities.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Администратор системы",
                            IsActive = true,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Обычный пользователь",
                            IsActive = true,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Templify.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Templify.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CategoryType")
                        .HasColumnType("integer");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Downloads")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Tags")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "DesignVista",
                            Category = "Business",
                            CategoryType = 1,
                            Description = "Professional Business Platform",
                            Downloads = 4580,
                            ImageUrl = "~/src/img/tem1.png",
                            Name = "BusinessPro",
                            Price = 99m,
                            Tags = "business, professional, platform"
                        },
                        new
                        {
                            Id = 2,
                            Author = "DesignCraft",
                            Category = "Business",
                            CategoryType = 1,
                            Description = "Corporate Management System",
                            Downloads = 3580,
                            ImageUrl = "~/src/img/tem2.png",
                            Name = "CorporateHub",
                            Price = 89m,
                            Tags = "corporate, management, system"
                        },
                        new
                        {
                            Id = 3,
                            Author = "CodeMaven",
                            Category = "3D Web",
                            CategoryType = 2,
                            Description = "3D Web Design Platform",
                            Downloads = 2980,
                            ImageUrl = "~/src/img/tem3.png",
                            Name = "3DWebStudio",
                            Price = 129m,
                            Tags = "3d, web, design"
                        },
                        new
                        {
                            Id = 4,
                            Author = "WebMaster",
                            Category = "3D Web",
                            CategoryType = 2,
                            Description = "3D Interactive Experience",
                            Downloads = 2504,
                            ImageUrl = "~/src/img/tem4.png",
                            Name = "ThreeDimensional",
                            Price = 149m,
                            Tags = "3d, interactive, experience"
                        },
                        new
                        {
                            Id = 5,
                            Author = "ThemeWiz",
                            Category = "Saas Platforms",
                            CategoryType = 3,
                            Description = "Cloud-based SaaS Platform",
                            Downloads = 1805,
                            ImageUrl = "~/src/img/tem5.png",
                            Name = "CloudSaaS",
                            Price = 199m,
                            Tags = "saas, cloud, platform"
                        },
                        new
                        {
                            Id = 6,
                            Author = "PixelGenius",
                            Category = "Saas Platforms",
                            CategoryType = 3,
                            Description = "Professional SaaS Solution",
                            Downloads = 1506,
                            ImageUrl = "~/src/img/tem6.png",
                            Name = "SaaSPro",
                            Price = 179m,
                            Tags = "saas, professional, solution"
                        },
                        new
                        {
                            Id = 7,
                            Author = "WebMajestic",
                            Category = "Agency",
                            CategoryType = 4,
                            Description = "Digital Agency Platform",
                            Downloads = 1200,
                            ImageUrl = "~/src/img/tem7.png",
                            Name = "AgencyHub",
                            Price = 159m,
                            Tags = "agency, digital, platform"
                        },
                        new
                        {
                            Id = 8,
                            Author = "TemplatePro",
                            Category = "Agency",
                            CategoryType = 4,
                            Description = "Creative Agency Website",
                            Downloads = 1100,
                            ImageUrl = "~/src/img/tem8.png",
                            Name = "CreativeAgency",
                            Price = 139m,
                            Tags = "creative, agency, website"
                        },
                        new
                        {
                            Id = 9,
                            Author = "PixelGenius",
                            Category = "Portfolio Design",
                            CategoryType = 5,
                            Description = "Professional Portfolio",
                            Downloads = 900,
                            ImageUrl = "~/src/img/tem9.png",
                            Name = "PortfolioPro",
                            Price = 79m,
                            Tags = "portfolio, professional, design"
                        },
                        new
                        {
                            Id = 10,
                            Author = "DesignVista",
                            Category = "Portfolio Design",
                            CategoryType = 5,
                            Description = "Creative Design Portfolio",
                            Downloads = 800,
                            ImageUrl = "~/src/img/tem10.png",
                            Name = "DesignPortfolio",
                            Price = 69m,
                            Tags = "design, portfolio, creative"
                        },
                        new
                        {
                            Id = 11,
                            Author = "TemplatePro",
                            Category = "Ecommerce",
                            CategoryType = 6,
                            Description = "E-commerce Store Platform",
                            Downloads = 700,
                            ImageUrl = "~/src/img/tem11.png",
                            Name = "EcomStore",
                            Price = 189m,
                            Tags = "ecommerce, store, platform"
                        },
                        new
                        {
                            Id = 12,
                            Author = "WebStudio",
                            Category = "Ecommerce",
                            CategoryType = 6,
                            Description = "Professional Shopping Site",
                            Downloads = 600,
                            ImageUrl = "~/src/img/tem12.png",
                            Name = "ShopPro",
                            Price = 169m,
                            Tags = "shop, professional, ecommerce"
                        },
                        new
                        {
                            Id = 13,
                            Author = "DesignVista",
                            Category = "Education",
                            CategoryType = 7,
                            Description = "Educational Platform",
                            Downloads = 550,
                            ImageUrl = "~/src/img/tem1.png",
                            Name = "EduPlatform",
                            Price = 119m,
                            Tags = "education, platform, learning"
                        },
                        new
                        {
                            Id = 14,
                            Author = "DesignCraft",
                            Category = "Education",
                            CategoryType = 7,
                            Description = "Learning Management System",
                            Downloads = 480,
                            ImageUrl = "~/src/img/tem2.png",
                            Name = "LearnHub",
                            Price = 109m,
                            Tags = "learning, management, system"
                        },
                        new
                        {
                            Id = 15,
                            Author = "CodeMaven",
                            Category = "Health",
                            CategoryType = 8,
                            Description = "Healthcare Platform",
                            Downloads = 420,
                            ImageUrl = "~/src/img/tem3.png",
                            Name = "HealthCare",
                            Price = 159m,
                            Tags = "health, care, platform"
                        },
                        new
                        {
                            Id = 16,
                            Author = "WebMaster",
                            Category = "Health",
                            CategoryType = 8,
                            Description = "Medical Services Website",
                            Downloads = 380,
                            ImageUrl = "~/src/img/tem4.png",
                            Name = "MedicalHub",
                            Price = 149m,
                            Tags = "medical, services, health"
                        },
                        new
                        {
                            Id = 17,
                            Author = "ThemeWiz",
                            Category = "Marketing",
                            CategoryType = 9,
                            Description = "Marketing Agency Platform",
                            Downloads = 350,
                            ImageUrl = "~/src/img/tem5.png",
                            Name = "MarketingPro",
                            Price = 139m,
                            Tags = "marketing, agency, platform"
                        },
                        new
                        {
                            Id = 18,
                            Author = "PixelGenius",
                            Category = "Marketing",
                            CategoryType = 9,
                            Description = "Advertising Campaign Site",
                            Downloads = 320,
                            ImageUrl = "~/src/img/tem6.png",
                            Name = "AdCampaign",
                            Price = 129m,
                            Tags = "advertising, campaign, marketing"
                        },
                        new
                        {
                            Id = 19,
                            Author = "WebMajestic",
                            Category = "Restaurant & Food",
                            CategoryType = 10,
                            Description = "Restaurant Management Platform",
                            Downloads = 290,
                            ImageUrl = "~/src/img/tem7.png",
                            Name = "RestaurantHub",
                            Price = 119m,
                            Tags = "restaurant, food, management"
                        },
                        new
                        {
                            Id = 20,
                            Author = "TemplatePro",
                            Category = "Restaurant & Food",
                            CategoryType = 10,
                            Description = "Food Delivery Service",
                            Downloads = 260,
                            ImageUrl = "~/src/img/tem8.png",
                            Name = "FoodDelivery",
                            Price = 109m,
                            Tags = "food, delivery, service"
                        },
                        new
                        {
                            Id = 21,
                            Author = "PixelGenius",
                            Category = "Gaming & Entertainment",
                            CategoryType = 11,
                            Description = "Gaming Studio Platform",
                            Downloads = 240,
                            ImageUrl = "~/src/img/tem9.png",
                            Name = "GameStudio",
                            Price = 169m,
                            Tags = "gaming, studio, platform"
                        },
                        new
                        {
                            Id = 22,
                            Author = "DesignVista",
                            Category = "Gaming & Entertainment",
                            CategoryType = 11,
                            Description = "Entertainment Website",
                            Downloads = 220,
                            ImageUrl = "~/src/img/tem10.png",
                            Name = "EntertainmentHub",
                            Price = 159m,
                            Tags = "entertainment, gaming, website"
                        },
                        new
                        {
                            Id = 23,
                            Author = "TemplatePro",
                            Category = "Real Estate",
                            CategoryType = 12,
                            Description = "Real Estate Platform",
                            Downloads = 200,
                            ImageUrl = "~/src/img/tem11.png",
                            Name = "RealEstatePro",
                            Price = 179m,
                            Tags = "real estate, property, platform"
                        },
                        new
                        {
                            Id = 24,
                            Author = "WebStudio",
                            Category = "Real Estate",
                            CategoryType = 12,
                            Description = "Property Management System",
                            Downloads = 180,
                            ImageUrl = "~/src/img/tem12.png",
                            Name = "PropertyHub",
                            Price = 169m,
                            Tags = "property, management, real estate"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Templify.Domain.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Templify.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Templify.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Templify.Domain.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Templify.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Templify.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Templify.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("Templify.Domain.Entities.ApplicationUser", "Identity")
                        .WithOne("AppUser")
                        .HasForeignKey("Templify.Domain.Entities.AppUser", "IdentityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Identity");
                });

            modelBuilder.Entity("Templify.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("AppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
