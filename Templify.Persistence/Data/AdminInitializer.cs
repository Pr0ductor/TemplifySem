using Microsoft.AspNetCore.Identity;
using Templify.Domain.Entities;
using Templify.Domain.Enums;

namespace Templify.Persistence.Data
{
    /// <summary>
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏ —Ä–æ–ª–µ–π
    /// 
    /// –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏:
    /// 
    /// üîê –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (Admin)
    /// Email: admin@templify.com
    /// –ü–∞—Ä–æ–ª—å: Admin123!
    /// –†–æ–ª—å: Admin
    /// –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ (—Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)
    /// 
    /// üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä 1 (Manager)
    /// Email: manager1@templify.com
    /// –ü–∞—Ä–æ–ª—å: Manager1!
    /// –†–æ–ª—å: Manager
    /// –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø (—Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ù–ï —É–¥–∞–ª–µ–Ω–∏–µ)
    /// 
    /// üë©‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä 2 (Manager)
    /// Email: manager2@templify.com
    /// –ü–∞—Ä–æ–ª—å: Manager2!
    /// –†–æ–ª—å: Manager
    /// –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø (—Å–æ–∑–¥–∞–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ù–ï —É–¥–∞–ª–µ–Ω–∏–µ)
    /// 
    /// –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.
    /// 
    /// üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å–∫—Ä—ã—Ç–∞ –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    /// –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –Ω—É–∂–Ω—ã—Ö —Ä–æ–ª–µ–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 404 –æ—à–∏–±–∫–∞.
    /// 
    /// üë• –†–∞–∑–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–∞–≤:
    /// - Admin: –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º
    /// - Manager: –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ –ù–ï —É–¥–∞–ª—è—Ç—å –∑–∞–ø–∏—Å–∏
    /// </summary>
    public static class AdminInitializer
    {
        public static async Task InitializeAsync(UserManager<ApplicationUser> userManager, RoleManager<ApplicationRole> roleManager)
        {
            // –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            string[] roles = { "Admin", "Manager", "User" };
            
            foreach (var role in roles)
            {
                if (!await roleManager.RoleExistsAsync(role))
                {
                    await roleManager.CreateAsync(new ApplicationRole { Name = role });
                }
            }

            // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            var adminEmail = "admin@templify.com";
            var adminUser = await userManager.FindByEmailAsync(adminEmail);
            
            if (adminUser == null)
            {
                adminUser = new ApplicationUser
                {
                    UserName = "admin",
                    Email = adminEmail,
                    EmailConfirmed = true,
                    PhoneNumberConfirmed = true,
                    TwoFactorEnabled = false,
                    LockoutEnabled = false,
                    AccessFailedCount = 0
                };

                var result = await userManager.CreateAsync(adminUser, "Admin123!");
                if (result.Succeeded)
                {
                    await userManager.AddToRoleAsync(adminUser, "Admin");
                }
            }

            // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ 1
            var manager1Email = "manager1@templify.com";
            var manager1User = await userManager.FindByEmailAsync(manager1Email);
            
            if (manager1User == null)
            {
                manager1User = new ApplicationUser
                {
                    UserName = "manager1",
                    Email = manager1Email,
                    EmailConfirmed = true,
                    PhoneNumberConfirmed = true,
                    TwoFactorEnabled = false,
                    LockoutEnabled = false,
                    AccessFailedCount = 0
                };

                var result = await userManager.CreateAsync(manager1User, "Manager1!");
                if (result.Succeeded)
                {
                    await userManager.AddToRoleAsync(manager1User, "Manager");
                }
            }

            // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ 2
            var manager2Email = "manager2@templify.com";
            var manager2User = await userManager.FindByEmailAsync(manager2Email);
            
            if (manager2User == null)
            {
                manager2User = new ApplicationUser
                {
                    UserName = "manager2",
                    Email = manager2Email,
                    EmailConfirmed = true,
                    PhoneNumberConfirmed = true,
                    TwoFactorEnabled = false,
                    LockoutEnabled = false,
                    AccessFailedCount = 0
                };

                var result = await userManager.CreateAsync(manager2User, "Manager2!");
                if (result.Succeeded)
                {
                    await userManager.AddToRoleAsync(manager2User, "Manager");
                }
            }
        }
    }
}
